diff -uNr sz/src/szd_double.c sz-hacc/src/szd_double.c
--- sz/src/szd_double.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_double.c	2017-10-24 22:50:57.981910584 -0500
@@ -181,8 +181,8 @@
 			memcpy(preBytes,curBytes,8);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_double_pwr.c sz-hacc/src/szd_double_pwr.c
--- sz/src/szd_double_pwr.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_double_pwr.c	2017-10-24 22:50:57.981910584 -0500
@@ -115,8 +115,8 @@
 			memcpy(preBytes,curBytes,8);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_float.c sz-hacc/src/szd_float.c
--- sz/src/szd_float.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_float.c	2017-10-24 22:50:57.981910584 -0500
@@ -192,8 +192,8 @@
 			memcpy(preBytes,curBytes,4);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_float_pwr.c sz-hacc/src/szd_float_pwr.c
--- sz/src/szd_float_pwr.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_float_pwr.c	2017-10-24 22:50:57.981910584 -0500
@@ -121,8 +121,8 @@
 			memcpy(preBytes,curBytes,4);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_int16.c sz-hacc/src/szd_int16.c
--- sz/src/szd_int16.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_int16.c	2017-10-24 22:50:57.982910574 -0500
@@ -150,8 +150,8 @@
 			(*data)[i] = exactData + minValue;
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			tmp = predValue + (type_-intvRadius)*interval;
 			if(tmp >= SZ_INT16_MIN&&tmp<SZ_INT16_MAX)
 				(*data)[i] = tmp;
diff -uNr sz/src/szd_int32.c sz-hacc/src/szd_int32.c
--- sz/src/szd_int32.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_int32.c	2017-10-24 22:50:57.982910574 -0500
@@ -149,8 +149,8 @@
 			(*data)[i] = exactData + minValue;
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_int64.c sz-hacc/src/szd_int64.c
--- sz/src/szd_int64.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_int64.c	2017-10-24 22:50:57.982910574 -0500
@@ -149,8 +149,8 @@
 			(*data)[i] = exactData + minValue;
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz/src/szd_int8.c sz-hacc/src/szd_int8.c
--- sz/src/szd_int8.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/szd_int8.c	2017-10-24 22:50:57.982910574 -0500
@@ -150,8 +150,8 @@
 			(*data)[i] = exactData + minValue;
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			tmp = predValue + (type_-intvRadius)*interval;
 			if(tmp >= SZ_INT8_MIN&&tmp<SZ_INT8_MAX)
 				(*data)[i] = tmp;
diff -uNr sz/src/sz_double.c sz-hacc/src/sz_double.c
--- sz/src/sz_double.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_double.c	2017-10-24 22:50:57.981910584 -0500
@@ -49,8 +49,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -314,8 +314,8 @@
 	{				
 		//printf("%.30G\n",last3CmprsData[0]);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz/src/sz_double_pwr.c sz-hacc/src/sz_double_pwr.c
--- sz/src/sz_double_pwr.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_double_pwr.c	2017-10-24 22:50:57.982910574 -0500
@@ -111,8 +111,8 @@
 			realPrecision = pwrErrBound[j++];
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -600,8 +600,8 @@
 			interval = 2*realPrecision;
 			updateReqLength = 0;
 		}
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<checkRadius)
 		{
diff -uNr sz/src/sz_float.c sz-hacc/src/sz_float.c
--- sz/src/sz_float.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_float.c	2017-10-24 22:50:57.997910412 -0500
@@ -36,8 +36,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -394,8 +394,8 @@
 //		if(i==2869438)
 //			printf("i=%d\n", i);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
@@ -428,7 +428,7 @@
 			}
 			else
 				listAdd_float(last3CmprsData, pred);
-						
+				
 			continue;
 		}
 		
diff -uNr sz/src/sz_float_pwr.c sz-hacc/src/sz_float_pwr.c
--- sz/src/sz_float_pwr.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_float_pwr.c	2017-10-24 22:50:57.982910574 -0500
@@ -114,8 +114,8 @@
 			realPrecision = pwrErrBound[j++];
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -607,8 +607,8 @@
 			interval = 2*realPrecision;
 			updateReqLength = 0;
 		}
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<checkRadius)
 		{
diff -uNr sz/src/sz_int16.c sz-hacc/src/sz_int16.c
--- sz/src/sz_int16.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_int16.c	2017-10-24 22:50:57.983910563 -0500
@@ -33,8 +33,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = llabs(pred_value - oriData[i]);
 			radiusIndex = (uint64_t)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -264,8 +264,8 @@
 	for(i=2;i<dataLength;i++)
 	{
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = llabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz/src/sz_int32.c sz-hacc/src/sz_int32.c
--- sz/src/sz_int32.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_int32.c	2017-10-24 22:50:57.983910563 -0500
@@ -33,8 +33,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = llabs(pred_value - oriData[i]);
 			radiusIndex = (uint64_t)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -72,7 +72,7 @@
 	int64_t pred_value = 0, pred_err;
 	size_t *intervals = (size_t*)malloc(maxRangeRadius*sizeof(size_t));
 	memset(intervals, 0, maxRangeRadius*sizeof(size_t));
-	size_t totalSampleSize = (r1-1)*(r2-1)/sampleDistance;
+	size_t totalSampleSize = r1*r2/sampleDistance;
 	for(i=1;i<r1;i++)
 	{
 		for(j=1;j<r2;j++)
@@ -266,8 +266,8 @@
 //		if(i==2869438)
 //			printf("i=%d\n", i);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = llabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz/src/sz_int64.c sz-hacc/src/sz_int64.c
--- sz/src/sz_int64.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_int64.c	2017-10-24 22:50:57.983910563 -0500
@@ -33,8 +33,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = llabs(pred_value - oriData[i]);
 			radiusIndex = (uint64_t)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -267,8 +267,8 @@
 //		if(i==2869438)
 //			printf("i=%d\n", i);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = llabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz/src/sz_int8.c sz-hacc/src/sz_int8.c
--- sz/src/sz_int8.c	2017-10-24 22:42:36.000000000 -0500
+++ sz-hacc/src/sz_int8.c	2017-10-24 22:50:57.982910574 -0500
@@ -33,8 +33,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = llabs(pred_value - oriData[i]);
 			radiusIndex = (uint64_t)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -264,8 +264,8 @@
 	for(i=2;i<dataLength;i++)
 	{
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = llabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
