diff -uNr sz-1.4.10-beta/sz/src/sz_double.c sz-1.4.10-hacc/sz/src/sz_double.c
--- sz-1.4.10-beta/sz/src/sz_double.c	2017-07-19 22:55:08.134217379 -0500
+++ sz-1.4.10-hacc/sz/src/sz_double.c	2017-07-21 08:23:58.722722975 -0500
@@ -32,8 +32,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -297,8 +297,8 @@
 	{				
 		//printf("%.30G\n",last3CmprsData[0]);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz-1.4.10-beta/sz/src/sz_double_pwr.c sz-1.4.10-hacc/sz/src/sz_double_pwr.c
--- sz-1.4.10-beta/sz/src/sz_double_pwr.c	2017-07-19 12:34:31.432302047 -0500
+++ sz-1.4.10-hacc/sz/src/sz_double_pwr.c	2017-07-21 08:26:41.257056366 -0500
@@ -78,8 +78,8 @@
 			realPrecision = pwrErrBound[j++];
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -494,8 +494,8 @@
 			interval = 2*realPrecision;
 			updateReqLength = 0;
 		}
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<checkRadius)
 		{
diff -uNr sz-1.4.10-beta/sz/src/sz_float.c sz-1.4.10-hacc/sz/src/sz_float.c
--- sz-1.4.10-beta/sz/src/sz_float.c	2017-07-20 14:41:09.130108933 -0500
+++ sz-1.4.10-hacc/sz/src/sz_float.c	2017-07-21 08:23:38.198933424 -0500
@@ -32,8 +32,8 @@
 	{
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -297,8 +297,8 @@
 //		if(i==2869438)
 //			printf("i=%d\n", i);
 		curData = spaceFillingValue[i];
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<=checkRadius)
 		{
diff -uNr sz-1.4.10-beta/sz/src/sz_float_pwr.c sz-1.4.10-hacc/sz/src/sz_float_pwr.c
--- sz-1.4.10-beta/sz/src/sz_float_pwr.c	2017-07-19 12:33:13.961177138 -0500
+++ sz-1.4.10-hacc/sz/src/sz_float_pwr.c	2017-07-21 08:27:24.723610665 -0500
@@ -79,8 +79,8 @@
 			realPrecision = pwrErrBound[j++];
 		if(i%sampleDistance==0)
 		{
-			pred_value = 2*oriData[i-1] - oriData[i-2];
-			//pred_value = oriData[i-1];
+			//pred_value = 2*oriData[i-1] - oriData[i-2];
+			pred_value = oriData[i-1];
 			pred_err = fabs(pred_value - oriData[i]);
 			radiusIndex = (unsigned long)((pred_err/realPrecision+1)/2);
 			if(radiusIndex>=maxRangeRadius)
@@ -498,8 +498,8 @@
 			interval = 2*realPrecision;
 			updateReqLength = 0;
 		}
-		pred = 2*last3CmprsData[0] - last3CmprsData[1];
-		//pred = last3CmprsData[0];
+		//pred = 2*last3CmprsData[0] - last3CmprsData[1];
+		pred = last3CmprsData[0];
 		predAbsErr = fabs(curData - pred);	
 		if(predAbsErr<checkRadius)
 		{
diff -uNr sz-1.4.10-beta/sz/src/TightDataPointStorageD.c sz-1.4.10-hacc/sz/src/TightDataPointStorageD.c
--- sz-1.4.10-beta/sz/src/TightDataPointStorageD.c	2017-07-19 22:52:02.128010194 -0500
+++ sz-1.4.10-hacc/sz/src/TightDataPointStorageD.c	2017-07-21 08:29:44.628176099 -0500
@@ -326,8 +326,8 @@
 			memcpy(preBytes,curBytes,8);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz-1.4.10-beta/sz/src/TightDataPointStorageD_pwr.c sz-1.4.10-hacc/sz/src/TightDataPointStorageD_pwr.c
--- sz-1.4.10-beta/sz/src/TightDataPointStorageD_pwr.c	2017-07-18 16:30:17.653272516 -0500
+++ sz-1.4.10-hacc/sz/src/TightDataPointStorageD_pwr.c	2017-07-21 08:30:39.728611105 -0500
@@ -115,8 +115,8 @@
 			memcpy(preBytes,curBytes,8);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz-1.4.10-beta/sz/src/TightDataPointStorageF.c sz-1.4.10-hacc/sz/src/TightDataPointStorageF.c
--- sz-1.4.10-beta/sz/src/TightDataPointStorageF.c	2017-07-20 14:41:44.110738169 -0500
+++ sz-1.4.10-hacc/sz/src/TightDataPointStorageF.c	2017-07-21 08:29:57.858040442 -0500
@@ -320,8 +320,8 @@
 			memcpy(preBytes,curBytes,4);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
diff -uNr sz-1.4.10-beta/sz/src/TightDataPointStorageF_pwr.c sz-1.4.10-hacc/sz/src/TightDataPointStorageF_pwr.c
--- sz-1.4.10-beta/sz/src/TightDataPointStorageF_pwr.c	2017-07-18 16:31:53.302241436 -0500
+++ sz-1.4.10-hacc/sz/src/TightDataPointStorageF_pwr.c	2017-07-21 08:30:28.911722021 -0500
@@ -121,8 +121,8 @@
 			memcpy(preBytes,curBytes,4);
 			break;
 		default:
-			predValue = 2 * (*data)[i-1] - (*data)[i-2];
-			//predValue = (*data)[i-1];
+			//predValue = 2 * (*data)[i-1] - (*data)[i-2];
+			predValue = (*data)[i-1];
 			(*data)[i] = predValue + (type_-intvRadius)*interval;
 			break;
 		}
